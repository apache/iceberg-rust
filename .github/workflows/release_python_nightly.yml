# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: "Nightly PyPI Build"

on:
  schedule:
    - cron: "0 0 * * *"  # Runs at midnight UTC every day
  workflow_dispatch:  # Allows manual triggering

env:
  rust_msrv: "1.77.1"

permissions:
  contents: read

jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install toml
        run: pip install toml

      # Override the library version
      - name: Get current version
        run: |
          CURRENT_VERSION=$(python -c "import toml; print(toml.load('bindings/python/pyproject.toml')['project']['version'])")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          
      - name: Update version with timestamp
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          NEW_VERSION="${CURRENT_VERSION}.dev${TIMESTAMP}"
          NEW_VERSION=$NEW_VERSION python -c "
          import toml
          import os
          config = toml.load('bindings/python/pyproject.toml')
          config['project']['version'] = os.environ['NEW_VERSION']
          with open('bindings/python/pyproject.toml', 'w') as f:
              toml.dump(config, f)
          print(f'Updated version to: {config[\"project\"][\"version\"]}')
          "

      - uses: PyO3/maturin-action@v1
        with:
          working-directory: "bindings/python"
          command: sdist
          args: -o dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: bindings/python/dist

  wheels:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - { os: windows-latest }
          - { os: macos-latest, target: "universal2-apple-darwin" }
          - { os: ubuntu-latest, target: "x86_64" }
          - { os: ubuntu-latest, target: "aarch64" }
          - { os: ubuntu-latest, target: "armv7l" }
    steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: 3.9
        - name: Setup Rust toolchain
          uses: ./.github/actions/setup-builder
          with:
            rust-version: ${{ env.rust_msrv }}
        - uses: PyO3/maturin-action@v1
          with:
            target: ${{ matrix.target }}
            manylinux: auto
            working-directory: "bindings/python"
            command: build
            args: --release -o dist
          env:
            # Workaround ring 0.17 build issue
            CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
        - name: Upload wheels
          uses: actions/upload-artifact@v4
          with:
            name: wheels-${{ matrix.os }}-${{ matrix.target }}
            path: bindings/python/dist

  testpypi-publish:
    name: Publish Python üêç distribution üì¶ to TestPypi
    needs: [ sdist, wheels ]
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyiceberg_core

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: bindings/python/dist
    - name: List downloaded artifacts
      run: ls -R bindings/python/dist
    # - name: Publish to TestPyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     repository-url: https://test.pypi.org/legacy/
    #     skip-existing: true
    #     packages-dir: bindings/python/dist
