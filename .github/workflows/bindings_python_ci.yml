# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Bindings Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  check-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Check clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  check-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install tools
        run: |
          pip install ruff
      - name: Check format
        working-directory: "bindings/python"
        run: |
          ruff format . --diff
      - name: Check style
        working-directory: "bindings/python"
        run: |
          ruff check .

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - uses: PyO3/maturin-action@v1
        with:
          working-directory: "bindings/python"
          command: build
          args: --out dist --sdist
      - name: Run tests
        working-directory: "bindings/python"
        shell: bash
        run: |
          set -e
          pip install hatch==1.12.0
          hatch run dev:pip install dist/pyiceberg_core-*.whl --force-reinstall
          hatch run dev:test