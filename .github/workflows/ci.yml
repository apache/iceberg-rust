# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  rust_msrv: "1.84.0"

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder

      - name: Check License Header
        uses: apache/skywalking-eyes/header@v0.7.0

      - name: Install taplo-cli
        uses: taiki-e/install-action@v2
        with:
          tool: taplo-cli@0.9.3
      - name: Check toml format
        run: make check-toml

      - name: Cargo format
        run: make check-fmt

      - name: Check diff
        run: git diff --exit-code

      - name: Cargo clippy
        run: make check-clippy

      - name: Install cargo-machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete
      - name: Cargo Machete
        run: cargo machete

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder

      - name: Cache Rust artifacts
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: make build

  build_with_no_default_features:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder

      - name: Cache Rust artifacts
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build -p iceberg --no-default-features

  unit:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          root-reserve-mb: 10240
          temp-reserve-mb: 10240

      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder

      - name: Cache Rust artifacts
        uses: Swatinem/rust-cache@v2

      - name: Test
        run: cargo test --no-fail-fast --all-targets --all-features --workspace

      - name: Async-std Test
        run: cargo test --no-fail-fast --all-targets --no-default-features  --features "async-std" --features "storage-all" --workspace

      - name: Doc Test
        run: cargo test --no-fail-fast --doc --all-features --workspace

  msrv:
    name: Verify MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Nightly Rust toolchain
        uses: ./.github/actions/setup-builder
      - name: Generate minimal versions lockfile
        run: |
          cargo generate-lockfile -Z direct-minimal-versions -Z minimal-versions
      - name: Setup MSRV Rust toolchain
        uses: ./.github/actions/setup-builder
        with:
          rust-version: ${{ env.rust_msrv }}
      - name: Check MSRV
        run: |
          cargo +${{ env.rust_msrv }} check --locked --workspace
